// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: proto/state.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"` // "start" ou "stop"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlRequest) Reset() {
	*x = ControlRequest{}
	mi := &file_proto_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRequest) ProtoMessage() {}

func (x *ControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRequest.ProtoReflect.Descriptor instead.
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return file_proto_state_proto_rawDescGZIP(), []int{0}
}

func (x *ControlRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type ControlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           bool                   `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlResponse) Reset() {
	*x = ControlResponse{}
	mi := &file_proto_state_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResponse) ProtoMessage() {}

func (x *ControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResponse.ProtoReflect.Descriptor instead.
func (*ControlResponse) Descriptor() ([]byte, []int) {
	return file_proto_state_proto_rawDescGZIP(), []int{1}
}

func (x *ControlResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

type LogSubscriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optionnel : filtres pour les logs
	SlaveId        string `protobuf:"bytes,1,opt,name=slave_id,json=slaveId,proto3" json:"slave_id,omitempty"`                       // Si vide, tous les slaves
	LogLevel       string `protobuf:"bytes,2,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`                    // debug, info, warn, error
	SinceTimestamp int64  `protobuf:"varint,3,opt,name=since_timestamp,json=sinceTimestamp,proto3" json:"since_timestamp,omitempty"` // Pour récupérer les logs depuis un moment donné
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LogSubscriptionRequest) Reset() {
	*x = LogSubscriptionRequest{}
	mi := &file_proto_state_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSubscriptionRequest) ProtoMessage() {}

func (x *LogSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*LogSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_state_proto_rawDescGZIP(), []int{2}
}

func (x *LogSubscriptionRequest) GetSlaveId() string {
	if x != nil {
		return x.SlaveId
	}
	return ""
}

func (x *LogSubscriptionRequest) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *LogSubscriptionRequest) GetSinceTimestamp() int64 {
	if x != nil {
		return x.SinceTimestamp
	}
	return 0
}

type LogEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlaveId       string                 `protobuf:"bytes,1,opt,name=slave_id,json=slaveId,proto3" json:"slave_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level         string                 `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"` // debug, info, warn, error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	mi := &file_proto_state_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_proto_state_proto_rawDescGZIP(), []int{3}
}

func (x *LogEvent) GetSlaveId() string {
	if x != nil {
		return x.SlaveId
	}
	return ""
}

func (x *LogEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEvent) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

var File_proto_state_proto protoreflect.FileDescriptor

const file_proto_state_proto_rawDesc = "" +
	"\n" +
	"\x11proto/state.proto\x12\x02pb\"*\n" +
	"\x0eControlRequest\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\"#\n" +
	"\x0fControlResponse\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\bR\x03ack\"y\n" +
	"\x16LogSubscriptionRequest\x12\x19\n" +
	"\bslave_id\x18\x01 \x01(\tR\aslaveId\x12\x1b\n" +
	"\tlog_level\x18\x02 \x01(\tR\blogLevel\x12'\n" +
	"\x0fsince_timestamp\x18\x03 \x01(\x03R\x0esinceTimestamp\"s\n" +
	"\bLogEvent\x12\x19\n" +
	"\bslave_id\x18\x01 \x01(\tR\aslaveId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level2\x7f\n" +
	"\fStateService\x122\n" +
	"\aControl\x12\x12.pb.ControlRequest\x1a\x13.pb.ControlResponse\x12;\n" +
	"\rSubscribeLogs\x12\x1a.pb.LogSubscriptionRequest\x1a\f.pb.LogEvent0\x01B\x0eZ\f/internal/pbb\x06proto3"

var (
	file_proto_state_proto_rawDescOnce sync.Once
	file_proto_state_proto_rawDescData []byte
)

func file_proto_state_proto_rawDescGZIP() []byte {
	file_proto_state_proto_rawDescOnce.Do(func() {
		file_proto_state_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_state_proto_rawDesc), len(file_proto_state_proto_rawDesc)))
	})
	return file_proto_state_proto_rawDescData
}

var file_proto_state_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_state_proto_goTypes = []any{
	(*ControlRequest)(nil),         // 0: pb.ControlRequest
	(*ControlResponse)(nil),        // 1: pb.ControlResponse
	(*LogSubscriptionRequest)(nil), // 2: pb.LogSubscriptionRequest
	(*LogEvent)(nil),               // 3: pb.LogEvent
}
var file_proto_state_proto_depIdxs = []int32{
	0, // 0: pb.StateService.Control:input_type -> pb.ControlRequest
	2, // 1: pb.StateService.SubscribeLogs:input_type -> pb.LogSubscriptionRequest
	1, // 2: pb.StateService.Control:output_type -> pb.ControlResponse
	3, // 3: pb.StateService.SubscribeLogs:output_type -> pb.LogEvent
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_state_proto_init() }
func file_proto_state_proto_init() {
	if File_proto_state_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_state_proto_rawDesc), len(file_proto_state_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_state_proto_goTypes,
		DependencyIndexes: file_proto_state_proto_depIdxs,
		MessageInfos:      file_proto_state_proto_msgTypes,
	}.Build()
	File_proto_state_proto = out.File
	file_proto_state_proto_goTypes = nil
	file_proto_state_proto_depIdxs = nil
}
